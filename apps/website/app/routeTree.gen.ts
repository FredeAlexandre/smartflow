/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as skeletonTeamsettingsImport } from './routes/(skeleton)/team_settings'
import { Route as skeletonTeamactivityImport } from './routes/(skeleton)/team_activity'
import { Route as skeletonProjectsettingsImport } from './routes/(skeleton)/project_settings'
import { Route as skeletonProjectactivityImport } from './routes/(skeleton)/project_activity'
import { Route as skeletonProjectImport } from './routes/(skeleton)/project'
import { Route as skeletonProfilesettingsImport } from './routes/(skeleton)/profile_settings'
import { Route as skeletonOverviewImport } from './routes/(skeleton)/overview'
import { Route as skeletonNocodeImport } from './routes/(skeleton)/nocode'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authSigninImport } from './routes/(auth)/signin'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as authResetPasswordTokenImport } from './routes/(auth)/reset-password.$token'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const skeletonTeamsettingsRoute = skeletonTeamsettingsImport.update({
  path: '/team_settings',
  getParentRoute: () => rootRoute,
} as any)

const skeletonTeamactivityRoute = skeletonTeamactivityImport.update({
  path: '/team_activity',
  getParentRoute: () => rootRoute,
} as any)

const skeletonProjectsettingsRoute = skeletonProjectsettingsImport.update({
  path: '/project_settings',
  getParentRoute: () => rootRoute,
} as any)

const skeletonProjectactivityRoute = skeletonProjectactivityImport.update({
  path: '/project_activity',
  getParentRoute: () => rootRoute,
} as any)

const skeletonProjectRoute = skeletonProjectImport.update({
  path: '/project',
  getParentRoute: () => rootRoute,
} as any)

const skeletonProfilesettingsRoute = skeletonProfilesettingsImport.update({
  path: '/profile_settings',
  getParentRoute: () => rootRoute,
} as any)

const skeletonOverviewRoute = skeletonOverviewImport.update({
  path: '/overview',
  getParentRoute: () => rootRoute,
} as any)

const skeletonNocodeRoute = skeletonNocodeImport.update({
  path: '/nocode',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authSigninRoute = authSigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordTokenRoute = authResetPasswordTokenImport.update({
  path: '/reset-password/$token',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/nocode': {
      id: '/nocode'
      path: '/nocode'
      fullPath: '/nocode'
      preLoaderRoute: typeof skeletonNocodeImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/overview': {
      id: '/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof skeletonOverviewImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/profile_settings': {
      id: '/profile_settings'
      path: '/profile_settings'
      fullPath: '/profile_settings'
      preLoaderRoute: typeof skeletonProfilesettingsImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/project': {
      id: '/project'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof skeletonProjectImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/project_activity': {
      id: '/project_activity'
      path: '/project_activity'
      fullPath: '/project_activity'
      preLoaderRoute: typeof skeletonProjectactivityImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/project_settings': {
      id: '/project_settings'
      path: '/project_settings'
      fullPath: '/project_settings'
      preLoaderRoute: typeof skeletonProjectsettingsImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/team_activity': {
      id: '/team_activity'
      path: '/team_activity'
      fullPath: '/team_activity'
      preLoaderRoute: typeof skeletonTeamactivityImport
      parentRoute: typeof rootRoute
    }
    '/(skeleton)/team_settings': {
      id: '/team_settings'
      path: '/team_settings'
      fullPath: '/team_settings'
      preLoaderRoute: typeof skeletonTeamsettingsImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/reset-password/$token': {
      id: '/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof authResetPasswordTokenImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/nocode': typeof skeletonNocodeRoute
  '/overview': typeof skeletonOverviewRoute
  '/profile_settings': typeof skeletonProfilesettingsRoute
  '/project': typeof skeletonProjectRoute
  '/project_activity': typeof skeletonProjectactivityRoute
  '/project_settings': typeof skeletonProjectsettingsRoute
  '/team_activity': typeof skeletonTeamactivityRoute
  '/team_settings': typeof skeletonTeamsettingsRoute
  '/reset-password/$token': typeof authResetPasswordTokenRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/nocode': typeof skeletonNocodeRoute
  '/overview': typeof skeletonOverviewRoute
  '/profile_settings': typeof skeletonProfilesettingsRoute
  '/project': typeof skeletonProjectRoute
  '/project_activity': typeof skeletonProjectactivityRoute
  '/project_settings': typeof skeletonProjectsettingsRoute
  '/team_activity': typeof skeletonTeamactivityRoute
  '/team_settings': typeof skeletonTeamsettingsRoute
  '/reset-password/$token': typeof authResetPasswordTokenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/nocode': typeof skeletonNocodeRoute
  '/overview': typeof skeletonOverviewRoute
  '/profile_settings': typeof skeletonProfilesettingsRoute
  '/project': typeof skeletonProjectRoute
  '/project_activity': typeof skeletonProjectactivityRoute
  '/project_settings': typeof skeletonProjectsettingsRoute
  '/team_activity': typeof skeletonTeamactivityRoute
  '/team_settings': typeof skeletonTeamsettingsRoute
  '/reset-password/$token': typeof authResetPasswordTokenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/nocode'
    | '/overview'
    | '/profile_settings'
    | '/project'
    | '/project_activity'
    | '/project_settings'
    | '/team_activity'
    | '/team_settings'
    | '/reset-password/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/nocode'
    | '/overview'
    | '/profile_settings'
    | '/project'
    | '/project_activity'
    | '/project_settings'
    | '/team_activity'
    | '/team_settings'
    | '/reset-password/$token'
  id:
    | '__root__'
    | '/'
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/nocode'
    | '/overview'
    | '/profile_settings'
    | '/project'
    | '/project_activity'
    | '/project_settings'
    | '/team_activity'
    | '/team_settings'
    | '/reset-password/$token'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
  skeletonNocodeRoute: typeof skeletonNocodeRoute
  skeletonOverviewRoute: typeof skeletonOverviewRoute
  skeletonProfilesettingsRoute: typeof skeletonProfilesettingsRoute
  skeletonProjectRoute: typeof skeletonProjectRoute
  skeletonProjectactivityRoute: typeof skeletonProjectactivityRoute
  skeletonProjectsettingsRoute: typeof skeletonProjectsettingsRoute
  skeletonTeamactivityRoute: typeof skeletonTeamactivityRoute
  skeletonTeamsettingsRoute: typeof skeletonTeamsettingsRoute
  authResetPasswordTokenRoute: typeof authResetPasswordTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
  skeletonNocodeRoute: skeletonNocodeRoute,
  skeletonOverviewRoute: skeletonOverviewRoute,
  skeletonProfilesettingsRoute: skeletonProfilesettingsRoute,
  skeletonProjectRoute: skeletonProjectRoute,
  skeletonProjectactivityRoute: skeletonProjectactivityRoute,
  skeletonProjectsettingsRoute: skeletonProjectsettingsRoute,
  skeletonTeamactivityRoute: skeletonTeamactivityRoute,
  skeletonTeamsettingsRoute: skeletonTeamsettingsRoute,
  authResetPasswordTokenRoute: authResetPasswordTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot-password",
        "/signin",
        "/signup",
        "/nocode",
        "/overview",
        "/profile_settings",
        "/project",
        "/project_activity",
        "/project_settings",
        "/team_activity",
        "/team_settings",
        "/reset-password/$token"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/signin": {
      "filePath": "(auth)/signin.tsx"
    },
    "/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/nocode": {
      "filePath": "(skeleton)/nocode.tsx"
    },
    "/overview": {
      "filePath": "(skeleton)/overview.tsx"
    },
    "/profile_settings": {
      "filePath": "(skeleton)/profile_settings.tsx"
    },
    "/project": {
      "filePath": "(skeleton)/project.tsx"
    },
    "/project_activity": {
      "filePath": "(skeleton)/project_activity.tsx"
    },
    "/project_settings": {
      "filePath": "(skeleton)/project_settings.tsx"
    },
    "/team_activity": {
      "filePath": "(skeleton)/team_activity.tsx"
    },
    "/team_settings": {
      "filePath": "(skeleton)/team_settings.tsx"
    },
    "/reset-password/$token": {
      "filePath": "(auth)/reset-password.$token.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
